# Generated by Django 5.0.6 on 2024-07-31 12:38

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("sending", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="EmailInteraction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("interaction_type", models.CharField(max_length=50)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "email",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sending.sentemail",
                    ),
                ),
                (
                    "related_open",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tracking.emailinteraction",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LinkClick",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("clicked_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "geo_location",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("referer", models.URLField(blank=True, null=True)),
                (
                    "device_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "screen_resolution",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("language", models.CharField(blank=True, max_length=255, null=True)),
                ("protocol", models.CharField(blank=True, max_length=255, null=True)),
                ("method", models.CharField(blank=True, max_length=255, null=True)),
                ("host", models.CharField(blank=True, max_length=255, null=True)),
                ("connection", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "link",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="sending.link"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TrackingLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("opened_at", models.DateTimeField(blank=True, null=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=255, null=True)),
                ("is_expired_open", models.BooleanField(default=False)),
                ("tracking_type", models.CharField(default="default", max_length=255)),
                (
                    "geo_location",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("referer", models.URLField(blank=True, null=True)),
                (
                    "device_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "screen_resolution",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("language", models.CharField(blank=True, max_length=255, null=True)),
                ("protocol", models.CharField(blank=True, max_length=255, null=True)),
                ("method", models.CharField(blank=True, max_length=255, null=True)),
                ("host", models.CharField(blank=True, max_length=255, null=True)),
                ("connection", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "email",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sending.sentemail",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GenuineOpen",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sending.sentemail",
                    ),
                ),
                (
                    "open_event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tracking.emailinteraction",
                    ),
                ),
            ],
            options={
                "unique_together": {("email", "open_event")},
            },
        ),
    ]
